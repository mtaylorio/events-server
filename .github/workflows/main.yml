name: Build Development Trunk
on:
  push:
    branches:
    - main
jobs:
  version:
    name: Assign Version
    runs-on: mtaylorio-runners-k8s
    container:
      image: images.home.mtaylor.io/deployer:0.0.9
    outputs:
      tag: ${{ steps.version.outputs.tag }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - id: version
      name: Generate Version Tag
      run: |
        set -eux
        git config --global --add safe.directory $GITHUB_WORKSPACE
        git fetch origin 'refs/tags/*:refs/tags/*'
        export tag=$(get-release-tag)
        echo "tag=$tag" >> $GITHUB_OUTPUT
  stack-build:
    name: Stack Build
    needs: version
    runs-on: mtaylorio-runners-k8s
    container:
      image: "images.home.mtaylor.io/events-mtaylor-io:build"
    outputs:
      tag: ${{ needs.version.outputs.tag }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Build
      run: |
        set -eux
        ./bin/version.sh ${{ needs.version.outputs.tag }}
        stack build --allow-different-user --copy-bins --local-bin-path .
    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: events-mtaylor-io
        path: events-mtaylor-io
  git-tag:
    name: "Git Tag"
    needs: "stack-build"
    runs-on: "mtaylorio-runners-k8s"
    container:
      image: "images.home.mtaylor.io/deployer:0.0.9"
    outputs:
      sha: "${{ steps.tag.outputs.sha }}"
      tag: "${{ needs.stack-build.outputs.tag }}"
    steps:
    - name: "Checkout"
      uses: "actions/checkout@v4"
    - id: tag
      name: "Tag"
      shell: "bash"
      run: |
        set -euxo pipefail
        tag=${{ needs.stack-build.outputs.tag }}
        git config --global --add safe.directory $GITHUB_WORKSPACE
        git config --global user.email "githubactions@mtaylor.io"
        git config --global user.name "GitHub Actions"
        ./bin/version.sh $tag
        ./bin/promote.sh $tag
        sha=$(git rev-parse --short HEAD)
        echo "sha=$sha" >> $GITHUB_OUTPUT
  docker-build:
    name: "Docker Build"
    needs: "git-tag"
    runs-on: "mtaylorio-runners-dind"
    outputs:
      sha: "${{ needs.git-tag.outputs.sha }}"
      tag: "${{ needs.git-tag.outputs.tag }}"
    steps:
    - name: "Set up Docker Buildx"
      uses: "docker/setup-buildx-action@v3"
    - name: "Checkout"
      uses: "actions/checkout@v4"
    - name: "Download artifacts"
      uses: "actions/download-artifact@v4"
      with:
        name: events-mtaylor-io
        path: events-mtaylor-io
    - name: "Fix path and permissions"
      run: |
        set -eux
        mv events-mtaylor-io events-mtaylor-io.dir
        mv events-mtaylor-io.dir/events-mtaylor-io events-mtaylor-io
        rmdir events-mtaylor-io.dir
        chmod 0755 events-mtaylor-io
    - id: "meta"
      name: "Docker Metadata"
      uses: "docker/metadata-action@v5"
      with:
        images: "images.home.mtaylor.io/events-mtaylor-io"
        tags: |
          latest
          ${{ needs.git-tag.outputs.tag }}
          sha-${{ needs.git-tag.outputs.sha }}
    - name: "Docker Build"
      uses: "docker/build-push-action@v6"
      with:
        push: true
        context: "."
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
  release:
    name: "Release"
    environment: "production"
    runs-on: "mtaylorio-runners-k8s"
    container:
      image: "images.home.mtaylor.io/deployer:0.0.9"
    needs:
    - "docker-build"
    steps:
    - name: "Configure git"
      shell: "bash"
      run: |
        git config --global user.email "githubactions@mtaylor.io"
        git config --global user.name "GitHub Actions"
        git config --global --add safe.directory $GITHUB_WORKSPACE
    - name: "Checkout argocd-deployment"
      uses: "actions/checkout@v4"
      with:
        repository: "mtaylor91/argocd-deployment"
        ref: "main"
        ssh-key: ${{ secrets.ARGOCD_DEPLOYMENT_SSH_PRIVATE_KEY }}
    - name: "Update argocd-deployment"
      shell: "bash"
      run: |
        set -euxo pipefail
        path=home/namespaced/mtaylor-io
        tag=${{ needs.docker-build.outputs.tag }}
        repo=https://github.com/mtaylorio/events-server
        ./bin/update-repo-tag.sh ${path} ${repo} ${tag}
        git commit -a -m "Update events-mtaylor-io to ${tag}"
        git push origin main
    - name: "Sync argocd"
      shell: "bash"
      env:
        ARGOCD_SERVER: "argocd.mtaylor.io"
        ARGOCD_AUTH_TOKEN: ${{ secrets.ARGOCD_AUTH_TOKEN }}
      run: |
        set -euxo pipefail
        argocd app sync argocd/mtaylor-io --grpc-web
        argocd app wait argocd/mtaylor-io --sync --health --timeout 300 --grpc-web
